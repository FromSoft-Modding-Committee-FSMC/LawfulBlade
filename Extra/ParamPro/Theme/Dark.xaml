<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <!-- TabControl Brushes -->
    <SolidColorBrush x:Key="TabControlForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="TabControlDisabledForeground" Color="#FF838383" />
    <SolidColorBrush x:Key="TabControlBackground" Color="#252526" />
    <SolidColorBrush x:Key="TabControlBorderBrush" Color="#3F3F46" />

    <!-- TabItem Brushes -->
    <SolidColorBrush x:Key="TabItemForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="TabItemMouseOverBackground" Color="#FF005995" />

    <!-- FocusVisual Brushes -->
    <SolidColorBrush x:Key="FocusVisualBorderBrush" Color="#FF007ACC" />

    <!-- ContextMenu Brushes -->
    <SolidColorBrush x:Key="ContextMenuForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="ContextMenuBackground" Color="#1B1B1C" />
    <SolidColorBrush x:Key="ContextMenuItemSeparator" Color="#333337" />
    <SolidColorBrush x:Key="ContextMenuBorderBrush" Color="#333337" />

    <!-- Menu Brushes -->
    <SolidColorBrush x:Key="MenuForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="MenuForegroundDisabled" Color="#FF838383" />

    <!-- MenuItem Brushes -->
    <SolidColorBrush x:Key="MenuItemDisabledForeground" Color="#FF838383" />
    <SolidColorBrush x:Key="MenuItemMouseOverBackground" Color="#3E3E40" />
    <SolidColorBrush x:Key="MenuItemPressedBackground" Color="#FF007ACC" />
    <SolidColorBrush x:Key="MenuItemCheckedBorderBrush" Color="#3399FF" />
    <SolidColorBrush x:Key="MenuItemCheckPathFill" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="MenuItemCheckDisabledPathFill" Color="#FF666666" />
    <SolidColorBrush x:Key="MenuItemOpenSubMenuPathFill" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="MenuItemOpenSubMenuMouseOverPathFill" Color="#FF007ACC" />
    <SolidColorBrush x:Key="MenuItemOpenSubMenuDisabledPathFill" Color="#FF666666" />

    <!-- ScrollBar -->
    <SolidColorBrush x:Key="ScrollBarButtonBackground" Color="Transparent" />
    <SolidColorBrush x:Key="ScrollBarBackground" Color="#FF373737" />
    <SolidColorBrush x:Key="ScrollBarBorderBrush" Color="#FF434346" />
    <SolidColorBrush x:Key="ScrollBarPathFill" Color="#FF686868" />
    <SolidColorBrush x:Key="ScrollBarDisabledPathFill" Color="#FF666666" />
    <SolidColorBrush x:Key="ScrollBarMouseOverPathFill" Color="#FF0078D7" />
    <SolidColorBrush x:Key="ScrollBarPressedPathFill" Color="#FF007ACC" />
    <SolidColorBrush x:Key="ScrollBarThumbPathFill" Color="#FF686868" />
    <SolidColorBrush x:Key="ScrollBarThumbMouseOverFill" Color="#FF9E9E9E" />
    <SolidColorBrush x:Key="ScrollBarThumbPressedFill" Color="#FFEFEBEF" />

    <!-- Button -->
    <SolidColorBrush x:Key="ButtonForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="#FF6D6D6D" />
    <SolidColorBrush x:Key="ButtonBackground" Color="#373737" />
    <SolidColorBrush x:Key="ButtonDisabledBackground" Color="#373737" />
    <SolidColorBrush x:Key="ButtonMouseOverBackground" Color="#54545C" />
    <SolidColorBrush x:Key="ButtonMouseOverBorderBrush" Color="#54545C" />
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="#007ACC" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#1C97EA" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#434346" />
    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="#434346" />
    <CornerRadius x:Key="ButtonCornerRadius">1</CornerRadius>

    <!-- ComboBox -->
    <SolidColorBrush x:Key="ComboBoxItemForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="ComboBoxItemDisabledForeground" Color="#FF6D6D6D" />
    <SolidColorBrush x:Key="ComboBoxItemSelectedForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="ComboBoxPopupBackground" Color="#1B1B1C" />
    <SolidColorBrush x:Key="ComboBoxPopupBorderBrush" Color="#333337" />
    <SolidColorBrush x:Key="ComboBoxItemMouseOverBackground" Color="#3E3E40" />
    <SolidColorBrush x:Key="ComboBoxItemSelectedBackground" Color="#FF005995" />
    <SolidColorBrush x:Key="ComboBoxMouseOverBorderBrush" Color="#007ACC" />
    <SolidColorBrush x:Key="ComboBoxExpandPathFill" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="ComboBoxExpandDisabledPathFill" Color="#FF666666" />
    <SolidColorBrush x:Key="ComboBoxExpandMouseOverPathFill" Color="#007ACC" />
    <SolidColorBrush x:Key="ComboBoxCaretBrush" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="TextBoxForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="TextBoxForegroundDisabled" Color="#FF6D6D6D" />
    <SolidColorBrush x:Key="TextBoxBackground" Color="#373737" />
    <SolidColorBrush x:Key="TextBoxBackgroundDisabled" Color="#373737" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#434346" />
    <SolidColorBrush x:Key="TextBoxBorderBrushDisabled" Color="#434346" />
    <SolidColorBrush x:Key="TextBoxSelectionBrush" Color="#FF0078D7" />
    <SolidColorBrush x:Key="TextBoxMouseOverBorderBrush" Color="#007ACC" />
    <SolidColorBrush x:Key="TextBoxIsEditingBorderBrush" Color="#FF3296FA" />
    <SolidColorBrush x:Key="TextBoxIsInactiveSelectionHighlightBrush" Color="#FF666666" />

    <SolidColorBrush x:Key="GroupBoxForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="GroupBoxHeaderForeground" Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="GroupBoxHeaderBackground" Color="#2D2D30" />
    <SolidColorBrush x:Key="GroupBoxBackground" Color="#252526" />
    <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#3F3F46" />

    <!-- Fractional Box -->
    <Style TargetType="{x:Type local:FractionalBox}" xmlns:local="clr-namespace:ParamPro.Control">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
    </Style>
    
    <!-- List Box -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
    </Style>
    
    <!-- Text Box -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}"/>
    </Style>
    
    <!-- Tree View -->
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource GroupBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource GroupBoxForeground}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    
    <!-- Tree View Item -->
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{StaticResource GroupBoxForeground}" />
    </Style>
    
    <!--  GroupBox  -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Background" Value="{StaticResource GroupBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource GroupBoxForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Background="{StaticResource GroupBoxHeaderBackground}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Margin="4,2,2,4"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  TextElement.Foreground="{StaticResource GroupBoxHeaderForeground}" />
                            </Grid>
                            <ScrollViewer Grid.Row="1"
                                          VerticalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          CanContentScroll="True"
                                          VerticalScrollBarVisibility="Auto">
                                <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1,0,0,0"
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow"
                                  Margin="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M1,1.5 L4.5,5 L8,1.5"
                                  Stroke="{StaticResource ComboBoxExpandPathFill}"
                                  StrokeThickness="2" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ComboBoxExpandMouseOverPathFill}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M1,4.5 L4.5,1 L8,4.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ComboBoxExpandDisabledPathFill}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
                            <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBoxBorderBrushDisabled}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <Border x:Name="dropDownBorder"
                            Background="{StaticResource ComboBoxPopupBackground}"
                            BorderBrush="{StaticResource ComboBoxPopupBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <Border x:Name="dropDownBorder"
                            Background="{StaticResource ComboBoxPopupBackground}"
                            BorderBrush="{StaticResource ComboBoxPopupBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="opaqueRect"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                <TextBox x:Name="PART_EditableTextBox"
                         Margin="{TemplateBinding Padding}"
                         BorderThickness="0"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Foreground" Value="{StaticResource ComboBoxItemForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItemSelectedBackground}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ComboBoxItemDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- TAB CONTROL BULL SHIT -->
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonMouseOverBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonDisabledBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonBorderBrushDisabled}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ButtonForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Control -->
    <Style  TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TabPanel x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                        <Border x:Name="Border"
                  Grid.Row="1"
                  BorderThickness="1"
                  CornerRadius="2"
                  KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2" 
                                Background="#202020"
                                BorderBrush="#101010">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Item -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#20A0F0" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                    Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                             Value="1,1,1,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Menu Item Border (Default, Unselected) -->
                        <Border x:Name="Border" Margin="0,0,-4,0" BorderThickness="1,1,1,1" CornerRadius="2,2,0,0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" />
                            </Border.BorderBrush>

                            <Border.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#202020" Offset="0.0" />
                                            <GradientStop Color="#202020" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>

                            <ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Menu  -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="#1B1B1C" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Margin" Value="1,0,0,0" />
                <Setter Property="Padding" Value="6,1,6,1" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Margin" Value="1,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  MinWidth="16"
                                  MinHeight="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=templateRoot}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome Name="Shdw"
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
                        <Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Margin" Value="3" />
                <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuForegroundDisabled}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="templateRoot" Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=SubMenuBorder}" />
                <Setter TargetName="templateRoot" Property="Background" Value="{Binding Background, ElementName=SubMenuBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  MinWidth="16"
                                  MinHeight="16"
                                  Margin="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="GlyphPanel"
                      Margin="3"
                      VerticalAlignment="Center"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=templateRoot}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome Name="Shdw"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
                        <Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Margin" Value="3" />
                <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemPressedBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItemMouseOverBackground}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuForegroundDisabled}" />
                <Setter TargetName="Icon" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="templateRoot" Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{Binding BorderBrush, ElementName=SubMenuBorder}" />
                <Setter TargetName="templateRoot" Property="Background" Value="{Binding Background, ElementName=SubMenuBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  Margin="6,3,0,3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Visibility="Hidden">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="{StaticResource MenuItemCheckPathFill}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      Height="8"
                      Margin="10,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Data="M0,0L4,4 0,8z"
                      Fill="{StaticResource MenuItemOpenSubMenuPathFill}"
                      UseLayoutRounding="False" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
                    <Themes:SystemDropShadowChrome Name="Shdw"
                                                   Margin="0,0,5,5"
                                                   Themes:SystemDropShadowChrome.Color="#71000000"
                                                   Themes:SystemDropShadowChrome.CornerRadius="0"
                                                   SnapsToDevicePixels="True">
                        <Border x:Name="SubMenuBorder"
                                Padding="0"
                                Background="{StaticResource ContextMenuBackground}"
                                BorderBrush="{StaticResource ContextMenuBorderBrush}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas"
                                            Width="22"
                                            Height="Auto"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch">
                                        <Rectangle x:Name="OpaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource MenuItemOpenSubMenuMouseOverPathFill}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuItemDisabledForeground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource MenuItemOpenSubMenuDisabledPathFill}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="22"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="IconBorder"
                        Width="22"
                        Height="22"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        ClipToBounds="False"
                        Visibility="Visible">
                    <ContentPresenter x:Name="Icon"
                                      Width="16"
                                      Height="16"
                                      Margin="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Icon}"
                                      ContentSource="Icon"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
                <Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        Visibility="Hidden">
                    <Path x:Name="Glyph"
                          Width="10"
                          Height="11"
                          Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                          Fill="{StaticResource MenuItemCheckPathFill}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder"
                            Padding="0"
                            Background="{StaticResource ContextMenuBackground}"
                            BorderBrush="{StaticResource ContextMenuBorderBrush}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="Canvas"
                                        Width="22"
                                        Height="Auto"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                               Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource MenuItemCheckedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItemMouseOverBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource MenuItemDisabledForeground}" />
                <Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource MenuItemCheckDisabledPathFill}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>